name: Publish Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  block-non-main:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "🚫 Manual dispatch is only allowed from the 'main' branch."
          exit 1

  validate-version:
    needs: block-non-main
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: check
        run: |
          VERSION=$(jq -r '.version' package.json)
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9\.-]+)?$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "✅ Expected format: 1.2.3 or 1.2.3-beta.1"
            exit 1
          fi
          TAG="v$VERSION"
          echo "✅ Valid version: $TAG"
          echo "version=$TAG" >> $GITHUB_OUTPUT

  build-and-release:
    needs: validate-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Get version
        id: get_version
        run: |
          VERSION="${{ needs.validate-version.outputs.version }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$VERSION"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin "$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          gh release create "$VERSION" \
            --title "Release $VERSION" \
            --notes "Automated release of $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
